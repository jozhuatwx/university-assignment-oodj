/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package productmanagement;

import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class ProductCatalogueUniversalPanel extends javax.swing.JPanel {
    String imageFilePath = "/productmanagement/img/InsertImage.png";
    /**
     * Creates new form ProductCatalogueUniversalPanel
     */
    public ProductCatalogueUniversalPanel() {
        initComponents();
        hidePanel();
        
        /*//Get the status(Activate or Deactivate) from database, and set the isActivated variable
        if(DATA GET FROM DATABASE == activate){
            isActivated = true;
        }else{
            isActivated = false;
        }*/
        setIcon();
    }
    
    // Create a variable to check the panel is closed or opened
    boolean isClosed;
    
    // Create a variable to check the textbox is enabled or disabled 
    boolean isEditing = false;
    
    //Create a variable to get the activate or deactivate status
    boolean isActivated;
    
    public void setIcon(){
        if(isActivated){
            // Change the icon to on
            lblStatus.setIcon(new ImageIcon(getClass().getResource("/productmanagement/img/switch-on.png")));
        }else{
            // Change the icon to off
            lblStatus.setIcon(new ImageIcon(getClass().getResource("/productmanagement/img/switch-off.png")));
        }
    }
    
    public void hidePanel(){
        // Set the pnlBackground to close(Resize it smaller to hide all the labels, textfield, buttons and textarea. )
        pnlTesting.setPreferredSize(new Dimension(733,60));
        pnlTesting.revalidate();
        pnlTesting.repaint();
        
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 33));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
        lblSaveIcon.setVisible(false);

        // When the panel is closed, set the boolean variable to true.
        isClosed = true;    
    }
    
    public void showPanel(){
        // If the panel is closed,then execute codes below:
        // Set the pnlBackground to open(Resize it larger to show all the labels, textfield, buttons and textarea. )
        pnlTesting.setPreferredSize(new Dimension(733,199));
        pnlTesting.revalidate();
        pnlTesting.repaint();
           
        // When the panel is opened, set the boolean variable to false.
        isClosed = false;
    }
    
    // Create a method to resize the image and label
    private ImageIcon resizeImage(String imagePath){
        int x, y;
        
        // Get the imageicon and get the width & height of the image
        ImageIcon MyImage = new ImageIcon(imagePath);
        x = MyImage.getIconWidth();
        y = MyImage.getIconHeight();
        
        // To differentiate the dimension of image (horizontal,vertical or square)
        // To resize the label based on the dimension
        if (x > y) {
            // If the width longer than height, then it is a horizontal image
            lblImage.setSize(160,128);
        } else if (y > x){
            // If the height longer than width, then it is a vertical image
            lblImage.setSize(102, 128);
        } else {
            // The width is equal to the height, then it is a square image
            lblImage.setSize(128, 128);
        }
        
        // Resize the image to the size of the label
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblImage.getWidth(),lblImage.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTesting = new javax.swing.JPanel();
        pnlBackground = new javax.swing.JPanel();
        lblNum = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        lblTitleError = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblStartDateError = new javax.swing.JLabel();
        lblDash = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        lblEndDateError = new javax.swing.JLabel();
        txtNumOfPage = new javax.swing.JTextField();
        lblNumOfPageError = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblControl = new javax.swing.JLabel();
        scrDescription = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        lblDescriptionError = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblImageError = new javax.swing.JLabel();
        lblCreatedBy = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        pnlEditDropDownList = new javax.swing.JPanel();
        lblEditIcon = new javax.swing.JLabel();
        lblEditCatalogue = new javax.swing.JLabel();
        lblEditPage = new javax.swing.JLabel();
        lblSaveIcon = new javax.swing.JLabel();

        pnlTesting.setPreferredSize(new java.awt.Dimension(733, 209));

        pnlBackground.setBackground(new java.awt.Color(255, 255, 255));
        pnlBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlBackground.setPreferredSize(new java.awt.Dimension(712, 179));

        lblNum.setBackground(new java.awt.Color(0, 0, 0));
        lblNum.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        lblNum.setText("1.");

        txtTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtTitle.setText("TITLE");
        txtTitle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTitle.setEnabled(false);

        lblTitleError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblTitleError.setForeground(new java.awt.Color(255, 0, 0));
        lblTitleError.setText("ERROR");

        txtStartDate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtStartDate.setText("START DATE");
        txtStartDate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtStartDate.setEnabled(false);

        lblStartDateError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblStartDateError.setForeground(new java.awt.Color(255, 0, 0));
        lblStartDateError.setText("ERROR");

        lblDash.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        lblDash.setText(" - ");

        txtEndDate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtEndDate.setText("END DATE");
        txtEndDate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtEndDate.setEnabled(false);

        lblEndDateError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblEndDateError.setForeground(new java.awt.Color(255, 0, 0));
        lblEndDateError.setText("ERROR");

        txtNumOfPage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtNumOfPage.setText("20Pgs");
        txtNumOfPage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNumOfPage.setEnabled(false);

        lblNumOfPageError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblNumOfPageError.setForeground(new java.awt.Color(255, 0, 0));
        lblNumOfPageError.setText("ERROR");

        lblStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productmanagement/img/switch-on.png"))); // NOI18N
        lblStatus.setDisabledIcon(null);
        lblStatus.setEnabled(false);
        lblStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblStatusMouseClicked(evt);
            }
        });

        lblControl.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblControl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblControl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productmanagement/img/Black-arrow-down.png"))); // NOI18N
        lblControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblControl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblControlMouseClicked(evt);
            }
        });

        txaDescription.setColumns(20);
        txaDescription.setRows(5);
        txaDescription.setEnabled(false);
        txaDescription.setPreferredSize(new java.awt.Dimension(164, 60));
        scrDescription.setViewportView(txaDescription);

        lblDescriptionError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblDescriptionError.setForeground(new java.awt.Color(255, 0, 0));
        lblDescriptionError.setText("ERROR");

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productmanagement/img/add.png"))); // NOI18N
        lblImage.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.setEnabled(false);
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });

        lblImageError.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        lblImageError.setForeground(new java.awt.Color(255, 0, 0));
        lblImageError.setText("ERROR");

        lblCreatedBy.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        lblCreatedBy.setText("Created By: ");

        lblName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        lblName.setText("CHOOI CHUN WEI");

        pnlEditDropDownList.setBackground(new java.awt.Color(255, 255, 255));

        lblEditIcon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEditIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productmanagement/img/Edit.png"))); // NOI18N
        lblEditIcon.setToolTipText("");
        lblEditIcon.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblEditIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEditIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEditIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblEditIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblEditIconMouseExited(evt);
            }
        });

        lblEditCatalogue.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lblEditCatalogue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEditCatalogue.setText("Catalogue");
        lblEditCatalogue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEditCatalogue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEditCatalogueMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblEditCatalogueMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblEditCatalogueMouseExited(evt);
            }
        });

        lblEditPage.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        lblEditPage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEditPage.setText("Page");
        lblEditPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEditPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEditPageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblEditPageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblEditPageMouseExited(evt);
            }
        });

        lblSaveIcon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSaveIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productmanagement/img/Save.png"))); // NOI18N
        lblSaveIcon.setToolTipText("");
        lblSaveIcon.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblSaveIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSaveIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSaveIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlEditDropDownListLayout = new javax.swing.GroupLayout(pnlEditDropDownList);
        pnlEditDropDownList.setLayout(pnlEditDropDownListLayout);
        pnlEditDropDownListLayout.setHorizontalGroup(
            pnlEditDropDownListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEditPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditDropDownListLayout.createSequentialGroup()
                .addComponent(lblSaveIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEditIcon))
            .addComponent(lblEditCatalogue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlEditDropDownListLayout.setVerticalGroup(
            pnlEditDropDownListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditDropDownListLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlEditDropDownListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEditIcon)
                    .addComponent(lblSaveIcon))
                .addComponent(lblEditCatalogue, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblEditPage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblNum)
                .addGap(20, 20, 20)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlBackgroundLayout.createSequentialGroup()
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                            .addComponent(lblTitleError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22)))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescriptionError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)))
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(lblStartDateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(lblDash)
                        .addGap(0, 0, 0)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblEndDateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumOfPage, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNumOfPageError, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblImageError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(lblImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCreatedBy)
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblName)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                        .addComponent(lblStatus)
                        .addGap(14, 14, 14)
                        .addComponent(lblControl, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlEditDropDownList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNum)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDash)
                            .addComponent(txtNumOfPage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitleError)
                    .addComponent(lblStartDateError)
                    .addComponent(lblEndDateError)
                    .addComponent(lblNumOfPageError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scrDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                                .addComponent(lblCreatedBy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDescriptionError)
                            .addComponent(lblImageError)))
                    .addComponent(pnlEditDropDownList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlTestingLayout = new javax.swing.GroupLayout(pnlTesting);
        pnlTesting.setLayout(pnlTestingLayout);
        pnlTestingLayout.setHorizontalGroup(
            pnlTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTestingLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        pnlTestingLayout.setVerticalGroup(
            pnlTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTesting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTesting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblStatusMouseClicked

        if(isEditing){
            System.out.println("isEditing");
            
            isActivated = !isActivated;
            setIcon();
        }
    }//GEN-LAST:event_lblStatusMouseClicked

    private void lblControlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblControlMouseClicked
        // Check if it is closed and enabled
        if(isClosed && !isEditing){
            showPanel();

            // Change the icon from down to up
            lblControl.setIcon(new ImageIcon(getClass().getResource("/productmanagement/img/Black-arrow-up.png")));

        }else if(!isClosed && !isEditing){
            hidePanel();

            // Change the icon from up to down
            lblControl.setIcon(new ImageIcon(getClass().getResource("/productmanagement/img/Black-arrow-down.png")));
        }
    }//GEN-LAST:event_lblControlMouseClicked

    private void lblEditIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditIconMouseClicked

        

       
    }//GEN-LAST:event_lblEditIconMouseClicked

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        
        if(isEditing){
            // To let the user insert the image after pressed the label
            JFileChooser file = new JFileChooser();

            // Set the home directory of the filechooser to user
            file.setCurrentDirectory(new File(System.getProperty("user.home")));

            // Create a new file name extension which including .jpg and .png file
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","png");
            file.addChoosableFileFilter(filter);
            int result = file.showSaveDialog(null);
            if (result == JFileChooser.APPROVE_OPTION){
                File selectedFile = file.getSelectedFile();
                String path = selectedFile.getAbsolutePath();
                lblImage.setIcon(resizeImage(path));
                imageFilePath = path;
            } else if (result == JFileChooser.CANCEL_OPTION){
                lblImage.setIcon(new ImageIcon(getClass().getResource("/productmanagement/img/InsertImage.png")));
                imageFilePath = "/productmanagement/img/InsertImage.png";
            }
        }
    }//GEN-LAST:event_lblImageMouseClicked

    private void lblEditCatalogueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditCatalogueMouseClicked
            txtTitle.setEnabled(true);
            txtStartDate.setEnabled(true);
            txtEndDate.setEnabled(true);
            txtNumOfPage.setEnabled(true);
            scrDescription.setEnabled(true);
            txaDescription.setEnabled(true);
            lblStatus.setEnabled(true);
            lblImage.setEnabled(true);
            lblControl.setEnabled(false);

            lblSaveIcon.setVisible(true);
            lblEditIcon.setVisible(false);
            lblEditCatalogue.setVisible(false);
            lblEditPage.setVisible(false);

            //When the textbox is enabled, set the boolean variable to true.
            isEditing = true;
            
            //Resize the size of the edit drop down list
            pnlEditDropDownList.setPreferredSize(new Dimension(78, 33));
            pnlEditDropDownList.revalidate();
            pnlEditDropDownList.repaint();
            
    }//GEN-LAST:event_lblEditCatalogueMouseClicked

    private void lblEditIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditIconMouseEntered
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 90));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditIconMouseEntered

    private void lblEditIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditIconMouseExited
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 33));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditIconMouseExited

    private void lblEditCatalogueMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditCatalogueMouseEntered
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 90));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditCatalogueMouseEntered

    private void lblEditCatalogueMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditCatalogueMouseExited
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 33));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditCatalogueMouseExited

    private void lblEditPageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditPageMouseEntered
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 90));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditPageMouseEntered

    private void lblEditPageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditPageMouseExited
        //Resize the size of the edit drop down list
        pnlEditDropDownList.setPreferredSize(new Dimension(78, 33));
        pnlEditDropDownList.revalidate();
        pnlEditDropDownList.repaint();
    }//GEN-LAST:event_lblEditPageMouseExited

    private void lblSaveIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveIconMouseClicked
            
            txtTitle.setEnabled(false);
            txtStartDate.setEnabled(false);
            txtEndDate.setEnabled(false);
            txtNumOfPage.setEnabled(false);
            scrDescription.setEnabled(false);
            txaDescription.setEnabled(false);
            lblStatus.setEnabled(false);
            lblImage.setEnabled(false);
            lblControl.setEnabled(true);

            lblSaveIcon.setVisible(false);
            lblEditIcon.setVisible(true);
            lblEditCatalogue.setVisible(true);
            lblEditPage.setVisible(true);
            
            //When the textbox is enabled, set the boolean variable to true.
            isEditing = false;
    }//GEN-LAST:event_lblSaveIconMouseClicked

    private void lblEditPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditPageMouseClicked
        AddProductCataloguePage apcp= new AddProductCataloguePage();
        apcp.setVisible(true);
    }//GEN-LAST:event_lblEditPageMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblControl;
    private javax.swing.JLabel lblCreatedBy;
    private javax.swing.JLabel lblDash;
    private javax.swing.JLabel lblDescriptionError;
    private javax.swing.JLabel lblEditCatalogue;
    private javax.swing.JLabel lblEditIcon;
    private javax.swing.JLabel lblEditPage;
    private javax.swing.JLabel lblEndDateError;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblImageError;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNum;
    private javax.swing.JLabel lblNumOfPageError;
    private javax.swing.JLabel lblSaveIcon;
    private javax.swing.JLabel lblStartDateError;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitleError;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlEditDropDownList;
    private javax.swing.JPanel pnlTesting;
    private javax.swing.JScrollPane scrDescription;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtNumOfPage;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
